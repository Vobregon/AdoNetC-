//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdoNet04.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class NeptunoEntities : DbContext
    {
        public NeptunoEntities()
            : base("name=NeptunoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Producto> Productos { get; set; }
    
        public virtual int usp_Actualizar_Producto(string nombre, Nullable<int> idProveedor, Nullable<int> idCategoria, Nullable<decimal> precio, Nullable<int> stock, Nullable<int> idProducto)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Actualizar_Producto", nombreParameter, idProveedorParameter, idCategoriaParameter, precioParameter, stockParameter, idProductoParameter);
        }
    
        public virtual int usp_Eliminar_Producto(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Eliminar_Producto", idProductoParameter);
        }
    
        public virtual int usp_Inserta_Producto(string nombre, Nullable<int> idProveedor, Nullable<int> idCategoria, Nullable<decimal> precio, Nullable<int> stock, ObjectParameter idProducto)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Inserta_Producto", nombreParameter, idProveedorParameter, idCategoriaParameter, precioParameter, stockParameter, idProducto);
        }
    
        public virtual ObjectResult<usp_ListaCategorias_Result> usp_ListaCategorias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListaCategorias_Result>("usp_ListaCategorias");
        }
    
        public virtual ObjectResult<usp_ListaProductos_Result> usp_ListaProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListaProductos_Result>("usp_ListaProductos");
        }
    
        public virtual ObjectResult<usp_ListaProveedores_Result> usp_ListaProveedores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListaProveedores_Result>("usp_ListaProveedores");
        }
    
        public virtual ObjectResult<usp_Producto_Por_Codigo_Result> usp_Producto_Por_Codigo(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Producto_Por_Codigo_Result>("usp_Producto_Por_Codigo", idProductoParameter);
        }
    }
}
